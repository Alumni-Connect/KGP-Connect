// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String   @unique()
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  role          Role      @default(STUDENT)
  posts         Post[]
  donationsMade Donation[] @relation("DonorDonations")
  donationsReceived Donation[] @relation("RecipientDonations")
  @@map("users")
}
 

model VerificationToken {
//   token String
//   email String
//   createdAt DateTime @default(now())

// @@unique([email,token])
  id          String  @id @default(cuid())
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")

}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Donation {
  id          String   @id @default(cuid())
  amount      Float
  currency    String   @default("USD")
  donor       User     @relation("DonorDonations", fields: [donorId], references: [id])
  donorId     String
  recipient   User     @relation("RecipientDonations", fields: [recipientId], references: [id])
  recipientId String
  createdAt   DateTime @default(now())
  message     String?
  status      String   @default("pending") // pending, completed, failed
}

enum Role {
  STUDENT
  ALUM
  ADMIN
}